\" TROFF Macro Summary: http://www.fileformat.info/info/man-pages/macro.htm

.TH SIMPLEPOST "1" "May 2017" "SimplePost 0.4" "User Commands"

\" Completely disable hyphenation. It is a very annoying feature while reading man pages, in my opinion.
.nh

.SH NAME
SimplePost \- Serve \fIFILE\fR \fICOUNT\fR times via HTTP on port \fIPORT\fR with IP address \fIADDRESS\fR.

.SH SYNOPSIS
.B simplepost
[\fIGLOBAL_OPTIONS\fR]
[\fIFILE_OPTIONS\fR]
\fIFILE\fR

.SH DESCRIPTION
SimplePost is an extremely lightweight Hypertext Transfer Protocol (HTTP) server based on GNU libmicrohttpd. It is missing many of the features of more established web servers such as Apache, Nginx, and Lighttpd. SimplePost has no intention of competing with these more established projects on features or speed. Its goal is to be a highly portable, fast, and low-resource web server for quickly transferring files from one computer to another on the same network with minimal setup.

.SH GLOBAL_OPTIONS
The global options described below apply to the program as a whole. Each option may be specified only once, and they must be specified before any \fIFILE\fR or \fIFILE_OPTIONS\fR. All global options are completely optional; SimplePost maintains sane defaults.

.IP \fB-i\fR\ \fIADDRESS\fR,\ \fB--address\fR=\fIADDRESS\fR
Serve \fIFILE\fR on \fIADDRESS\fR, where \fIADDRESS\fR is the server's Internet Protocol version 4 (IPv4) address. If no adapter on the host claims \fIADDRESS\fR, this program will print an error message (unless \fI--quiet\fR is in effect) and return with an error code.

If this option is not specified, the server will bind to all addresses assigned to network adapters on the host accessible by the current user. (netstat will claim its "Local Address" is "0.0.0.0:\fIPORT\fR".)

.IP \fB-p\fR\ \fIPORT\fR,\ \fB--port\fR=\fIPORT\fR
Listen on port \fIPORT\fR on the host. If \fIPORT\fR is not available, this program will print an error message (unless \fI--quiet\fR is in effect) and return with an error code.

If this option is not specified, a random, available port will be chosen. As long as \fI--quiet\fR is not specified, the chosen port will be printed to STDOUT when the program is launched.

.IP \fB--pid\fR=\fIPID\fR
Act on the instance of SimplePost with the process identifier \fIPID\fR rather than seeking the most recent instance with the same \fIADDRESS\fR and \fIPORT\fR or creating a new instance. If there is no process attached to \fIPID\fR or the process attached to \fIPID\fR is not compatible with this version of SimplePost, this program will print an error message (unless \fI--quiet\fR is in effect) and return with an error code.

Although the first line that SimplePost prints to STDOUT typically contains its current PID (unless there is an initialization error or \fI--quiet\fR has been invoked), sometimes it is helpful to retrieve the PID of all running SimplePost instances. There are many ways to go about this, but a selection of the more common commands are listed below for your convenience.

.TS
;
l
l
l .
$ ps -A | grep simplepost
$ ps -eo pid,user,args | head -n -3 | grep simplepost
$ sudo netstat -tlpn | grep simplepost
.TE

This option and \fI--new\fR are mutually exclusive.

.IP \fB--new\fR
Act exclusively on the current instance of this program.

This option might not seem particularly useful at first glance, but that is only because it doesn't necessarily modify this program's default behavior. By default, if neither \fI--pid\fR nor \fI--new\fR is specified, this program will look for all instances of SimplePost accessible by the effective user with the same \fIADDRESS\fR and \fIPORT\fR as was specified on this command line for this instance. If no \fIADDRESS\fR or \fIPORT\fR was specified, then \fIFILE\fR will be served on the first SimplePost instance accessible by the current user. If there are no active instances of this program that meet those criteria, then the current instance will spawn its internal HTTP server to sever \fIFILE\fR. If the \fI--new\fR option is specified, the aforementioned discovery process will be short-circuited, and the current SimplePost instance will just try to server \fIFILE\fR itself.

This option and the \fI--pid\fR and \fI--kill\fR options are mutually exclusive.

.IP \fB-k\fR,\ \fB--kill\fR
Shut down another instance of this program.

This option does not do anything magic. It simply sends the TERM signal to the selected SimplePost instance. Its primary advantage over calling "kill -15 <pid>" yourself is that it provides a convenient way to shut down the SimplePost instance bound to a particular \fIADDRESS\fR and listening on a particular \fIPORT\fR. It also conveniently does not just send the signal; it waits a few seconds for the targeted instance of SimplePost to cleanly terminate, and it prints an error message and exits with non-zero exit code if that instance does not. These properties can make it especially useful in shell scripts.

This option and \fI--new\fR are mutually exclusive.

.IP \fB--daemon\fR
Fork to the background just before initializing the web server, and run as a system daemon. This option only has an effect if files are being served on this instance of SimplePost.

.IP \fB-l\fR\ \fILTYPE\fR,\ \fB--list\fR=\fILTYPE\fR
List the requested type of information about an instance of this program. The specific type of information requested is specified by the \fILTYPE\fR, and the action taken and the other options required differ slightly based on its value.

.TS
tab(;) nowarn allbox;
c c
l l
l ^
l ^
l l
l ^ .
\fBLTYPE\fR;\fBDESCRIPTION\fR
i;T{
List all SimplePost instances that this program can connect to.

There may be more SimplePost instances running on this system,
but this command will only list the ones that are actually accessible
to this user.
T}
inst
instances
f;T{
List all files being served by the selected SimplePost instance.

This command uses the same rules as the web server to select the
instance to target. Functionally that means that it requires
either \fI--address\fR or \fI--port\fR options to also be specified,
otherwise there would be no way to know which instance to list files
from.
T}
files
.TE


The \fI--new\fR option must not be specified with this option! The behavior is undefined.

.IP \fB-q\fR,\ \fB--quiet\fR
Reduce verbosity with extreme prejudice. Do not print anything to STDOUT or STDERR.

This option is ignored when the \fI--list\fR option is also given. You may not both explicitly request output and explicitly deny it at the same time!

.IP \fB-s\fR,\ \fB--no-messages\fR
Suppress all messages but critical error messages.

This option is a slightly less severe alternative to \fI--quiet\fR. If everything works exactly as expected, SimplePost will print anything to the console, just like with \fI--quiet\fR. However if there is a fatal error, SimplePost will print a message about it to STDERR, unlike with \fI--quiet\fR.

.IP \fB-v\fR,\ \fB--verbose\fR
Print more verbose messages than usual to the console. If this option is given more than once, it will increase the verbosity even further. Note, however, that there is a practical limit to this effect. At some point specifying this option again will not help because you cannot make this program infinitely verbose.

This option will have no effect if the \fI--quiet\fR or \fI--no-messages\fR options are also given. Those options always take precedence.

.IP \fB--help\fR
Print the program's built-in help documentation.

.IP \fB--version\fR
Print the program's build and version information.

.SH FILE_OPTIONS
The file options described below correspond to a specific \fIFILE\fR. Each option may be specified only once per \fIFILE\fR, although no options are strictly necessary for a \fIFILE\fR to be served. Each file option applies to the \fIFILE\fR immediately following it.

.IP \fB-c\fR\ \fICOUNT\fR,\ \fB--count\fR=\fICOUNT\fR
Serve \fIFILE\fR exactly \fICOUNT\fR times.

Once the file has been served to a client (or multiple clients) \fICOUNT\fR times, it will no longer be served by the web server. (SimplePost will return a 404 error if the file is requested by a client after it has already been served \fICOUNT\fR times.) This does not necessarily guarantee that every client has received a complete copy of \fIFILE\fR. If a client disconnects (whether or not that was their intention) \fICOUNT\fR is decremented.

Once all files being served by this SimplePost instance have been downloaded the maximum allowable number of times, SimplePost will shut down the web server and exit. If this option is not specified, \fIFILE\fR will be served until this instance of SimplePost is sent the TERM signal.

.IP \fB-u\fR\ \fIURI\fR,\ \fB--uri\fR=\fIURI\fR
Serve \fIFILE\fR with the Uniform Resource Identifier \fIURI\fR.

By default SimplePost will automatically generate a URI for each \fIFILE\fR based on its base file name (see \fBbasename\fR(1)). This option, however, allows you to override this behavior and explicitly set a URI of your choosing.

Please note that the URI is the unique identifier of each resource as far as the web server is concerned. Therefore specifying the same URI more than once will allow you to change the other properties of that resource. For example, you can change the \fICOUNT\fR or \fIFILE\fR associated with an existing \fIURI\fR.

.SH FILE
At least one \fIFILE\fR must be specified to serve. More than one \fIFILE\fR may be specified, preceded by the \fIFILE_OPTIONS\fR you want to apply to it.

If there is already an instance of SimplePost bound to \fIADDRESS\fR listening on \fIPORT\fR, all specified files will be served by the original instance. The \fI--pid\fR and \fI--new\fR options have a much more detailed description of how this discovery process works.

.SH EXIT\ CODES
This program will exit with one of several error codes. If it returns \fB0\fR, everything was shutdown cleanly. All other exit codes indicate an error. If it returns with \fB1\fR, the error was not too severe. Higher error codes, up to a maximum of \fB255\fR, sequentially, indicate increasingly more severe errors.

.SH EXAMPLES
The following examples demonstrate the proper syntax for performing various common operations. If you need more help interpreting them, read the documentation above, and use common sense.

\fB1.\fR List all accessible instances of this program that are up and serving files.

.br
    $ simplepost --list instances
    $ simplepost -li

\fB2.\fR List all of the files being served by the SimplePost instance with the process identifier 99031.

.br
    $ simplepost --list files --pid 99031

\fB3.\fR List all of the files being served by the SimplePost instance listening on port 80.

.br
    $ simplepost -lf -p80

\fB4.\fR Serve the current user's BASH configuration file on port 80 exactly once before shutting down the web server. (Note that since port 80 is a privileged port, you will most likely need to run this command with superuser privileges, which typically involves prefixing the command with \fBsudo\fR.)

.br
    $ simplepost -q -p 80 -c 1 ~/.bashrc

\fB5.\fR Serve the current user's BASH aliases file exactly twice on the instance of SimplePost with the process identifier 99031 with very verbose messages. (Note that if no SimplePost instance has the \fIPID\fR 99031 when this command is run, it will fail. See the \fI--pid\fR and \fIEXIT CODES\fR entries in this manual for more information.)

.br
    $ simplepost --pid 99031 --verbose --verbose --count 2 ~/.bash_aliases
    $ simplepost -vvp 99031 -c 2 ~/.bash_aliases

\fB6.\fR Serve the \fIFILE\fR "Training Manual.pdf" on a random port until the SimplePost process receives the TERM signal.

.br
    $ simplepost "Training Manual.pdf"

\fB7.\fR Create a new instance of SimplePost listening on port 55555, and serve the \fIFILE\fR test.txt five times and the \fIFILE\fR test.log twice before shutting down the web server.

.br
    $ simplepost --new --port=55555 --count=5 test.txt --count=2 test.log

\fB8.\fR Serve README on port 9876 exactly twice with the URI "/files/test.txt".

.br
    $ simplepost --port=9876 --count=2 --uri /files/test.txt README
    $ simplepost -p 9876 -c 2 -u /files/test.txt README

.SH AUTHOR
This manual was written by Karl Lenz <xorangekiller@gmail.com>.

.SH COPYRIGHT
Copyright 2012-2017 Karl Lenz

Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved.

SimplePost is free software; see the COPYING file distributed with the source for the specific conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

.SH SEE\ ALSO
.BR woof (1),
.BR wget (1),
.BR curl (1),
.BR kill (1),
.BR ps (1),
.BR netstat (8)
